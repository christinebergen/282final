<div>
            <button
              className="bg-gray-200 p-4 rounded-lg flex flex-row ml-4 underline hover:bg-gray-300 hover:italic font-bold"
              onClick={() => setShowDropdown(!showDropdown)}
            >
              Purchase Equipment:
            </button>
            {showDropdown && (
              <div className="bg-gray-200 p-2 rounded-lg">
                <button onClick={() => handleTierSelection(1)}>Tier 1</button>
                <button onClick={() => handleTierSelection(2)}>Tier 2</button>
                <button onClick={() => handleTierSelection(3)}>Tier 3</button>
              </div>
            )}
          </div>
          {selectedTier && (
            <div>
              <h3>Equipment for Tier {selectedTier}</h3>
              {equipment.map((item, index) => (
                <p key={index}>
                  {item.item} - {item.cost}
                </p>
              ))}
            </div>
          )}
        </div>
        <h2 className="font-bold underline">Characters in play:</h2>
        <div className="grid grid-cols-2 md:flex md:flex-row justify-center items-center">
          {campaign.characters && campaign.characters.length > 0 ? (
            campaign.characters.map((characterName, index) => (
              <p
                className="bg-[#0FBDDB] mx-2 my-2 md:mx-4 md:my-4 p-4 rounded-lg font-bold hover:bg-teal-600"
                key={`character-${index}`}
                onClick={() => handleCharacterClick(characterName)}
              >
                <a href="#" style={{ textDecoration: "underline" }}>
                  {characterName}
                </a>
              </p>
            ))
          ) : (
            <p>No characters found</p>
          )}
        </div>
        <hr className="w-3/4 border-2 rounded-md border-gray-200 my-4"></hr>

        {selectedCharacterDetails && (
          <div className="bg-gray-200 rounded-lg p-8 flex flex-row ">
            <div>
              <h2 className="text-xl font-bold">
                {selectedCharacterDetails.name}
              </h2>
              <div className="flex flex-row justify-center items-center">
                <p className="font-bold">
                  Starting Weapon: {selectedCharacterDetails.startingWeapon}
                </p>
                <button className="bg-[#416477] text-gray-200 font-bold ml-4 p-2 rounded-lg hover:bg-slate-600">
                  Sell
                </button>
              </div>
              <button
                onClick={handleBuyAttachments}
                className="bg-[#0FBDDB] m-8 p-4 rounded-lg underline font-bold hover:italic hover:bg-teal-600"
              >
                Click here to buy Attachments
              </button>
            </div>
            {selectedCharacterDetails.attachments && (
              <ul className="">
                {Object.entries(selectedCharacterDetails.attachments).map(
                  ([attachment, value]) => (
                    <li key={attachment}>
                      {attachment}: {value}xp
                    </li>
                  )
                )}
              </ul>
            )}
            Additional character details can be displayed here